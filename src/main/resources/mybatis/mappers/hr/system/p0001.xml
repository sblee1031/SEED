<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hr.system.p0001">
	<resultMap id="p0001Result01" type="sawonVO">
		<result property="PK_SAWON_CODE" column="PK_SAWON_CODE" />
		<result property="SAWON_NAME" column="SAWON_NAME" />
		<result property="SAWON_ENG_NAME" column="SAWON_ENG_NAME" />
		<result property="SAWON_JOIN_DATE" column="SAWON_JOIN_DATE" />
		<result property="SAWON_RESIGNATION_DATE" column="SAWON_RESIGNATION_DATE" />
		<result property="SAWON_USER_STATUS" column="SAWON_USER_STATUS" />
		<result property="SAWON_PASSWORD" column="SAWON_PASSWORD" />
		<result property="SAWON_VIEW_PERMISSION" column="SAWON_VIEW_PERMISSION" />
		<result property="SAWON_EMAIL" column="SAWON_EMAIL" />
		<result property="FK_DEPT_CODE" column="FK_DEPT_CODE" />
		<result property="FK_DEPT_NAME" column="FK_DEPT_NAME" />
		<result property="RANK_NAME" column="RANK_NAME" />
		<result property="SAWON_INT_USER_ID" column="SAWON_INT_USER_ID" />
		<result property="SAWON_INT_DATE" column="SAWON_INT_DATE" />
		<result property="SAWON_MOD_USER_ID" column="SAWON_MOD_USER_ID" />
		<result property="SAWON_MOD_DATE" column="SAWON_MOD_DATE" />
		<result property="PHOTO" column="PHOTO" />
	</resultMap>
	
	<!-- 비밀번호찾기 - 비밀번호 변경 -->
	<update id="update_pw" parameterType="hr.system.p0001.vo.SawonVO">
		update SAWON set SAWON_PASSWORD = #{SAWON_PASSWORD} where PK_SAWON_CODE = #{PK_SAWON_CODE}
	</update>
	
	<!-- 내정보보기 - 비밀번호 유효성 검사 -->
	<select id="check_pw" parameterType="hr.system.p0001.vo.SawonVO" resultType="String">
		select PK_SAWON_CODE
		  from SAWON
		 where PK_SAWON_CODE = #{PK_SAWON_CODE}
		   AND SAWON_PASSWORD = #{SAWON_PASSWORD}
	</select>
	
	<!-- 내정보보기 - 비밀번호 변경 -->
	<update id="update_pw2" parameterType="hr.system.p0001.vo.SawonVO">
		update SAWON set SAWON_PASSWORD = #{newpw} where PK_SAWON_CODE = #{PK_SAWON_CODE}
	</update>
	
	<!-- 비밀번호찾기 - 아이디 유효성 검사 -->
	<select id="check_id" parameterType="String" resultType="String">
		select PK_SAWON_CODE from SAWON where PK_SAWON_CODE = #{PK_SAWON_CODE}
	</select>
	
	<!-- 비밀번호찾기 - 이메일 유효성 검사 -->
	<select id="find_by_Email" parameterType="String" resultType="String">
		select SAWON_EMAIL
		from SAWON
		where SAWON_EMAIL = #{SAWON_EMAIL}
		and PK_SAWON_CODE = #{PK_SAWON_CODE}
	</select>
	
    <select id="selectSearchMemberCount" parameterType="project.common.SearchVO" resultType="Integer" >
        SELECT COUNT(*)
          FROM SAWON CU
         WHERE CU.SAWON_USER_STATUS='Y'
           AND CU.SAWON_NAME LIKE '%'||#{searchKeyword}||'%'
    </select> 
    
    <select id="selectSearchMemberList" parameterType="project.common.SearchVO" resultType="hr.system.p0001.vo.SawonVO" >
       SELECT *
        FROM (SELECT ROWNUM as NO, PK_SAWON_CODE, SAWON_NAME, RANK_NAME, FK_DEPT_NAME, SAWON_JOIN_DATE, SAWON_EMAIL, SAWON_USER_STATUS
                FROM SAWON CU
                INNER JOIN DEPT CD ON CD.PK_DEPT_CODE=CU.FK_DEPT_CODE
                WHERE CU.SAWON_USER_STATUS='Y'
                ORDER by PK_SAWON_CODE
                ) A
        WHERE A.SAWON_NAME LIKE '%'||#{searchKeyword}||'%'
       	<if test="rowStart != null">
			AND A.NO BETWEEN ${rowStart-1} AND ${rowStart+9}
        </if>
    </select>
	
	<select id="selectMember4Login" parameterType="hr.system.p0001.vo.LoginVO" resultType="hr.system.p0001.vo.SawonVO" >
        SELECT PK_SAWON_CODE, SAWON_NAME, SAWON_VIEW_PERMISSION, PHOTO
          FROM SAWON 
         WHERE SAWON_USER_STATUS='Y' 
           AND PK_SAWON_CODE = #{ PK_SAWON_CODE } AND SAWON_PASSWORD = #{ SAWON_PASSWORD }
    </select> 
    
    <insert id="insertLogIn" parameterType="String">
    	INSERT INTO COM_LOGINOUT (LNO, USERNO, LTYPE, LDATE)
    	 	              VALUES ((SELECT NVL(MAX(LNO)+1,0) FROM COM_LOGINOUT), #{ PK_SAWON_CODE }, 'I', to_char(sysdate,'yyyy.mm.dd hh24:mi') )
    </insert>

    <insert id="insertLogOut" parameterType="String">
    	INSERT INTO COM_LOGINOUT (LNO, USERNO, LTYPE, LDATE)
    	 	              VALUES ((SELECT NVL(MAX(LNO)+1,0) FROM COM_LOGINOUT), #{ PK_SAWON_CODE }, 'O', to_char(sysdate,'yyyy.mm.dd hh24:mi') )
    </insert>
    
    <!-- 사용자 권한 조회 -->
    <select id="selectUserList" parameterType="String" resultType="hr.system.p0001.vo.SawonVO">
        SELECT PK_SAWON_CODE, SAWON_NAME, FK_DEPT_CODE, SAWON_VIEW_PERMISSION 
          FROM SAWON CU
         INNER JOIN COM_CODE CC ON CC.CODECD=CU.SAWON_VIEW_PERMISSION
         WHERE KEY=#{deptno} 
           AND CC.CLASSNO=1          
    </select> 
    
    <!-- 전자결재문서등록 -->
    <sql id="includeSignDocType">
        WHERE DOCTYPE_DELETEFLAG='N'
        <if test="searchKeyword!=null and searchKeyword!='' and searchType!=''">
            <foreach item="item" index="index" collection="searchTypeArr" separator=" OR " open="AND (" close=")">
                 ${item} LIKE CONCAT('%', #{searchKeyword},'%' )
            </foreach>
        </if>               
    </sql>

    <select id="selectSignDocTypeCount" resultType="Integer" parameterType="project.common.SearchVO">
        SELECT COUNT(*)
          FROM DOCTYPE SDT
         <include refid="includeSignDocType"/>
    </select>
    
    <sql id="includeCode">
        WHERE 1=1
        <if test="searchKeyword!=null and searchKeyword!='' and searchType!=''">
            <foreach item="item" index="index" collection="searchTypeArr" separator=" OR " open="AND (" close=")">
                 ${item} LIKE CONCAT('%', #{searchKeyword},'%' )
            </foreach>
        </if>               
    </sql> 
    
    <select id="selectSignDocTypeList" resultType="hr.system.p0001.vo.SignDocTypeVO" parameterType="project.common.SearchVO">
        SELECT PK_DOCTYPE_NUM, DOCTYPE_DTTITLE, DOCTYPE_DTCONTENTS, DOCTYPE_DELETEFLAG
		FROM (SELECT ROWNUM as NO, PK_DOCTYPE_NUM, DOCTYPE_DTTITLE, DOCTYPE_DTCONTENTS, DOCTYPE_DELETEFLAG
		      FROM DOCTYPE SDT
		      ORDER by PK_DOCTYPE_NUM DESC) A
		<include refid="includeCode"/>
      	<if test="rowStart != null">
			AND NO BETWEEN ${rowStart-1} AND ${rowStart+9}
         </if>
          AND DOCTYPE_DELETEFLAG='N'
    </select> 

    <insert id="insertSignDocType" parameterType="java.util.Map" >
    	<selectKey resultType="string" keyProperty="PK_DOCTYPE_NUM" order="BEFORE">
    		SELECT NVL(MAX(PK_DOCTYPE_NUM)+1, 1) FROM DOCTYPE
    	</selectKey>
        INSERT INTO DOCTYPE(PK_DOCTYPE_NUM, DOCTYPE_DTTITLE, DOCTYPE_DTCONTENTS, DOCTYPE_DELETEFLAG, DOCTYPE_INT_USER_ID, DOCTYPE_INT_DATE)
        VALUES (#{PK_DOCTYPE_NUM}, #{DOCTYPE_DTTITLE}, #{DOCTYPE_DTCONTENTS}, 'N', #{PK_SAWON_CODE}, to_char(sysdate,'yyyy.mm.dd hh24:mi'))
    </insert>
    
    <update id="updateSignDocType" parameterType="java.util.Map">
        UPDATE DOCTYPE
           SET DOCTYPE_DTTITLE=#{DOCTYPE_DTTITLE}, DOCTYPE_DTCONTENTS=#{DOCTYPE_DTCONTENTS}, DOCTYPE_MOD_USER_ID=#{PK_SAWON_CODE}, DOCTYPE_MOD_DATE=to_char(sysdate,'yyyy.mm.dd hh24:mi')
         WHERE PK_DOCTYPE_NUM=#{PK_DOCTYPE_NUM} 
    </update> 
        
    <select id="selectSignDocTypeOne" parameterType="hr.system.p0001.vo.SignDocTypeVO" resultType="hr.system.p0001.vo.SignDocTypeVO">
        SELECT PK_DOCTYPE_NUM, DOCTYPE_DTTITLE, DOCTYPE_DTCONTENTS
          FROM DOCTYPE SDT
         WHERE DOCTYPE_DELETEFLAG='N' AND PK_DOCTYPE_NUM=#{PK_DOCTYPE_NUM}
    </select> 
    
    <delete id="deleteSignDocType" parameterType="hr.system.p0001.vo.SignDocTypeVO">
        UPDATE DOCTYPE
           SET DOCTYPE_DELETEFLAG='Y'
         WHERE PK_DOCTYPE_NUM=#{PK_DOCTYPE_NUM} 
    </delete>

	
	
		<!-- 인사코드 -->
	<resultMap id="codeResult01" type="insaCodeVO">
		<result property="pk_PERSON_BC_CODE_NUM" column="pk_PERSON_BC_CODE_NUM" />
		<result property="pk_PERSON_BC_DETAI_CODE_NUM" column="pk_PERSON_BC_DETAI_CODE_NUM" />
		<result property="fk_PERSON_BC_CODE_NUM" column="fk_PERSON_BC_CODE_NUM" />
		<result property="person_BC_DETAI_MNGEMENT_NAME" column="person_BC_DETAI_MNGEMENT_NAME" />
		<result property="person_BC_OUTPUT" column="person_BC_OUTPUT" />
		<result property="person_BC_MNGEMENT_NAME" column="person_BC_MNGEMENT_NAME" />
		<result property="person_BC_MODIFY_WHE" column="person_BC_MODIFY_WHE" />
		<result property="person_BC_INT_USER_ID" column="person_BC_INT_USER_ID" />
		<result property="person_BC_INT_DATE" column="person_BC_INT_DATE" />
		<result property="person_BC_MOD_USER_ID" column="person_BC_MOD_USER_ID" />
		<result property="person_BC_MOD_DATE" column="person_BC_MOD_DATE" />
	</resultMap>

	<select id="outPut" resultMap="codeResult01" parameterType="java.util.Map"> 
      <![CDATA[
         select PK_PERSON_BC_CODE_NUM, PERSON_BC_MNGEMENT_NAME, PERSON_BC_MODIFY_WHE
         from   PERSON_BC
      ]]>
		<where>
			<if test="person_BC_OUTPUT != '' and person_BC_OUTPUT != null">
				person_BC_OUTPUT = #{person_BC_OUTPUT}
			</if>
		</where>
		<![CDATA[
			ORDER BY pk_PERSON_BC_CODE_NUM asc
		]]>
	</select>
	
	<select id="deTai" resultMap="codeResult01" parameterType="java.util.Map"> 
      <![CDATA[
         select PK_PERSON_BC_DETAI_CODE_NUM, PERSON_BC_DETAI_MNGEMENT_NAME, PERSON_BC_DETAI_REMARKS, PERSON_BC_DETAI_NOT_USE, fk_PERSON_BC_CODE_NUM
         from   PERSON_BC_DETAI
      ]]>
		<where>
			<if test="fk_PERSON_BC_CODE_NUM != '' and fk_PERSON_BC_CODE_NUM != null">
				fk_PERSON_BC_CODE_NUM = #{fk_PERSON_BC_CODE_NUM}
			</if>
		</where>
	</select>

	<!--  -->
	<select id="ISA_c" resultMap="codeResult01" parameterType="java.util.Map"> 
      <![CDATA[
         select pk_PERSON_BC_DETAI_CODE_NUM, PERSON_BC_DETAI_MNGEMENT_NAME, fk_PERSON_BC_CODE_NUM
         from   PERSON_BC_DETAI
      ]]>
	</select>


	<update id="updateData" parameterType="java.util.Map">
		update PERSON_BC_DETAI
		set  pk_PERSON_BC_DETAI_CODE_NUM = #{pk_PERSON_BC_DETAI_CODE_NUM,jdbcType=VARCHAR}
		   , person_BC_DETAI_MNGEMENT_NAME = #{person_BC_DETAI_MNGEMENT_NAME,jdbcType=VARCHAR}
		   , person_BC_DETAI_REMARKS = #{person_BC_DETAI_REMARKS,jdbcType=VARCHAR}
		   , person_BC_DETAI_NOT_USE = #{person_BC_DETAI_NOT_USE,jdbcType=VARCHAR}
		where pk_PERSON_BC_DETAI_CODE_NUM = #{copy_CODE_NUM, jdbcType=VARCHAR}
		and fk_person_bc_code_num = #{fk_PERSON_BC_CODE_NUM, jdbcType=VARCHAR}
	</update>	
	
	<insert id="insertData" parameterType="java.util.Map">
		insert into PERSON_BC_DETAI(PK_PERSON_BC_DETAI_CODE_NUM, PERSON_BC_DETAI_MNGEMENT_NAME, PERSON_BC_DETAI_REMARKS, PERSON_BC_DETAI_NOT_USE, FK_PERSON_BC_CODE_NUM) 
		values(#{pk_PERSON_BC_DETAI_CODE_NUM,jdbcType=VARCHAR}, #{person_BC_DETAI_MNGEMENT_NAME,jdbcType=VARCHAR}, #{person_BC_DETAI_REMARKS,jdbcType=VARCHAR}, #{person_BC_DETAI_NOT_USE,jdbcType=VARCHAR},#{fk_PERSON_BC_CODE_NUM, jdbcType=VARCHAR})
	</insert>	
	
	<delete id="deleteData" parameterType="java.util.Map">
		delete PERSON_BC_DETAI
		where pk_PERSON_BC_DETAI_CODE_NUM = #{pk_PERSON_BC_DETAI_CODE_NUM}
	</delete>
	
	<!-- 호봉테이블 -->
	<select id="hobongCode" resultMap="codeResult01" parameterType="java.util.Map"> 
      <![CDATA[
         select pk_PERSON_BC_DETAI_CODE_NUM, person_BC_DETAI_MNGEMENT_NAME
         from   PERSON_BC_DETAI
         WHERE	fk_PERSON_BC_CODE_NUM = 'G4'
         ORDER BY pk_PERSON_BC_DETAI_CODE_NUM asc
      ]]>
	</select>
	
	<resultMap id="hobongResult01" type="hbtalbeVO">
		<result property="pk_HOBONG_TABLE_UNIQUE_NUM" column="pk_HOBONG_TABLE_UNIQUE_NUM" />
		<result property="fk_RANK_CODE" column="fk_RANK_CODE" />
		<result property="fk_HOBONG_CODE" column="fk_HOBONG_CODE" />
		<result property="fk_HOBONG_CODE_CLA_CODE" column="fk_HOBONG_CODE_CLA_CODE" />
		<result property="hobong_TABLE_START_DATE_APPLI" column="hobong_TABLE_START_DATE_APPLI" />
		<result property="hobong_TABLE_END_DATE_APPLI" column="hobong_TABLE_END_DATE_APPLI" />
		<result property="hobong_TABLE_PRICE" column="hobong_TABLE_PRICE" />
		<result property="hobong_TABLE_INT_USER_ID" column="hobong_TABLE_INT_USER_ID" />
		<result property="hobong_TABLE_INT_DATE" column="hobong_TABLE_INT_DATE" />
		<result property="hobong_TABLE_MOD_USER_ID" column="hobong_TABLE_MOD_USER_ID" />
		<result property="hobong_TABLE_MOD_DATE" column="hobong_TABLE_MOD_DATE" />
	</resultMap>
	
	<select id="hobongApp" resultMap="hobongResult01" parameterType="java.util.Map"> 
      <![CDATA[
        select DISTINCT hobong_table_start_date_appli, hobong_table_end_date_appli, fk_RANK_CODE
		FROM hobong_table
      ]]>
      <where>
      	<if test="fk_RANK_CODE != '' and fk_RANK_CODE != null">
      		fk_rank_code = #{fk_RANK_CODE, jdbcType=VARCHAR}
      		ORDER BY hobong_table_start_date_appli ASC
      	</if>
      </where>
	</select>
	
	<select id="hobongTable" resultMap="hobongResult01" parameterType="java.util.Map"> 
      <![CDATA[
        select ht.fk_hobong_code, ht.hobong_table_price
		from person_bc_detai pd, hobong_table ht
      ]]>
      <where>
		pd.person_bc_detai_mngement_name = ht.fk_hobong_code
		and ht.hobong_table_start_date_appli = #{hobong_TABLE_START_DATE_APPLI, jdbcType=VARCHAR}
      	
      	<if test="fk_RANK_CODE != '' and fk_RANK_CODE != null">
      		and fk_rank_code = #{fk_RANK_CODE, jdbcType=VARCHAR}
      	</if>
      </where>
	</select>
	
	<!-- 호봉이력 추가시 들어오는 곳 -->
	<update id="updateHB" parameterType="java.util.Map">
	<![CDATA[
 		update hobong_table
		set hobong_table_end_date_appli = #{hobong_TABLE_END_DATE_APPLI, jdbcType=VARCHAR}
		where hobong_table_start_date_appli = #{hobong_TABLE_START_DATE_APPLI, jdbcType=VARCHAR}
		and fk_rank_code = #{fk_RANK_CODE, jdbcType=VARCHAR}  
		]]>
	</update>
	
	<!-- 기본급 수정시 들어오는 곳 -->
	<update id="updatePrice" parameterType="java.util.Map"> 
	<![CDATA[
 		update hobong_table
		set hobong_table_price = #{hobong_TABLE_PRICE, jdbcType=VARCHAR}
		where hobong_table_start_date_appli = #{hobong_TABLE_START_DATE_APPLI, jdbcType=VARCHAR}
		and fk_rank_code = #{fk_RANK_CODE, jdbcType=VARCHAR}
		and fk_hobong_code = #{fk_HOBONG_CODE, jdbcType=VARCHAR}
		]]>
	</update>
	
	
	<insert id="insertHB" parameterType="java.util.Map">
	<![CDATA[
		insert all into hobong_table(hobong_TABLE_START_DATE_APPLI, fk_RANK_CODE, fk_HOBONG_CODE, fk_HOBONG_CODE_CLA_CODE)
		values(#{hobong_TABLE_START_DATE_APPLI, jdbcType=VARCHAR},
			   #{fk_RANK_CODE, jdbcType=VARCHAR},
			   person_bc_detai_mngement_name,
			   'PE')
		select person_bc_detai_mngement_name from person_bc_detai 
		where fk_person_bc_code_num = 'PE'
		]]> 
	</insert>
	
	<delete id="deleteHB" parameterType="java.util.Map">
<!-- 		delete PERSON_BC_DETAI -->
<!-- 		where pk_PERSON_BC_DETAI_CODE_NUM = #{pk_PERSON_BC_DETAI_CODE_NUM} -->
	</delete>
	
	
   <!-- setPay -->
   <resultMap id="SET_paydayResult01" type="SET_paydayVO">
      <result property="pk_D_B_PAYMENT_SEQ_CODE" column="pk_D_B_PAYMENT_SEQ_CODE"/>
      <result property="d_B_PAYMENT_DT" column="d_B_PAYMENT_DT"/>
      <result property="d_B_PAYMENT_SIMULTANE_ISSUE" column="d_B_PAYMENT_SIMULTANE_ISSUE"/>
      <result property="d_B_PAYMENT_TARGET_SELECT" column="d_B_PAYMENT_TARGET_SELECT"/>
       <result property="d_B_PAYMENT_DATE_ATTRIBUT" column="d_B_PAYMENT_DATE_ATTRIBUT"/>
   
      <result property="fk_D_B_PAYMENT_SEQ_CODE" column="fk_D_B_PAYMENT_SEQ_CODE"/>
      <result property="pk_PAY_BEN_C_UNIQUE_NUM" column="pk_PAY_BEN_C_UNIQUE_NUM"/>
      <result property="pay_BEN_C_RECRUIT_METHOD" column="pay_BEN_C_RECRUIT_METHOD"/>
      <result property="pay_BEN_C_DATE_RECRUIT" column="pay_BEN_C_DATE_RECRUIT"/>
      <result property="pay_BEN_C_RETIRE_BEN_METHOD" column="pay_BEN_C_RETIRE_BEN_METHOD"/>
      <result property="pay_BEN_C_DATE_RESIG" column="pay_BEN_C_DATE_RESIG"/>
   
      
   </resultMap>
   
   <select id="SPsearchList" resultMap="SET_paydayResult01" parameterType="java.util.Map">
      <![CDATA[
    select pk_D_B_PAYMENT_SEQ_CODE, d_B_PAYMENT_DATE_ATTRIBUT, d_B_PAYMENT_DT, d_B_PAYMENT_SIMULTANE_ISSUE, d_B_PAYMENT_TARGET_SELECT
       from D_B_PAYMENT
       where d_B_PAYMENT_DATE_ATTRIBUT = #{d_B_PAYMENT_DATE_ATTRIBUT, jdbcType=VARCHAR}
      ]]>

   
   </select>
   
   
   
   
   
   <update id="SPupdateData" parameterType="java.util.Map">
      update D_B_PAYMENT
      set   d_B_PAYMENT_DATE_ATTRIBUT  = #{d_B_PAYMENT_DATE_ATTRIBUT, jdbcType=VARCHAR}
          , d_B_PAYMENT_DT = #{d_B_PAYMENT_DT, jdbcType=VARCHAR}
          , d_B_PAYMENT_SIMULTANE_ISSUE = #{d_B_PAYMENT_SIMULTANE_ISSUE, jdbcType=VARCHAR}
          , d_B_PAYMENT_TARGET_SELECT = #{d_B_PAYMENT_TARGET_SELECT, jdbcType=VARCHAR}
   
      where d_B_PAYMENT_DATE_ATTRIBUT = #{d_B_PAYMENT_DATE_ATTRIBUT, jdbcType=VARCHAR}
   </update>   
   
   <insert id="SPinsertData" parameterType="java.util.Map">
   
      <selectKey resultType="String" keyProperty="pk_SALARY_CAL_INFO" order="BEFORE">

          SELECT NVL(MAX(pk_D_B_PAYMENT_SEQ_CODE)+1, 1) FROM D_B_PAYMENT

       </selectKey>
      insert into D_B_PAYMENT(pk_D_B_PAYMENT_SEQ_CODE, D_B_PAYMENT_DATE_ATTRIBUT, d_B_PAYMENT_DT, d_B_PAYMENT_SIMULTANE_ISSUE, d_B_PAYMENT_TARGET_SELECT) values(#{pk_D_B_PAYMENT_SEQ_CODE, jdbcType=VARCHAR},#{D_B_PAYMENT_DATE_ATTRIBUT, jdbcType=VARCHAR}, #{d_B_PAYMENT_DT , jdbcType=VARCHAR}, #{d_B_PAYMENT_SIMULTANE_ISSUE, jdbcType=VARCHAR}, #{d_B_PAYMENT_TARGET_SELECT, jdbcType=VARCHAR})
   
   </insert>   
   
   <delete id="SPdeleteData" parameterType="java.util.Map">
        delete D_B_PAYMENT
    
       where TRIM(pk_D_B_PAYMENT_SEQ_CODE) = #{pk_D_B_PAYMENT_SEQ_CODE, jdbcType=VARCHAR}
   </delete>
	
	<!-- comEnroll -->
	<resultMap id="s0001Result01" type="comEnroll_VO">
		<result property="pk_company_code" column="pk_company_code" />
		<result property="company_name" column="company_name" />
		<result property="company_division" column="company_division" />
		<result property="company_fiscal_year_o" column="company_fiscal_year_o" />
		<result property="company_fiscal_year_t" column="company_fiscal_year_t" />
		<result property="company_reg_num" column="company_reg_num" />
		<result property="company_corp_reg_num" column="company_corp_reg_num" />
		<result property="company_rep_name" column="company_rep_name" />
		<result property="company_foreigner_whe" column="company_foreigner_whe" />
		<result property="company_resi_reg_num" column="company_resi_reg_num" />
		<result property="company_zip" column="company_zip" />
		<result property="company_address" column="company_address" />
		<result property="company_detail_address" column="company_detail_address" />
		<result property="company_tel" column="company_tel" />
		<result property="company_fax" column="company_fax" />
		<result property="company_business" column="company_business" />
		<result property="company_stocks" column="company_stocks" />
		<result property="company_establishment_date" column="company_establishment_date" />
		<result property="company_open_date" column="company_open_date" />
		<result property="company_closed_date" column="company_closed_date" />
		
		<result property="company_int_user_id" column="company_int_user_id" />
		<result property="company_int_date" column="company_int_date" />
		<result property="company_mod_user_id" column="company_mod_user_id" />
		<result property="company_mod_date" column="company_mod_date" />
		
		<!-- company의 모든 칼럼 
		pk_company_code, company_name, company_division ,company_fiscal_year_o ,company_fiscal_year_t ,company_reg_num
		,company_corp_reg_num ,company_rep_name ,company_foreigner_whe ,company_resi_reg_num ,company_zip
		,company_address ,company_detail_address ,company_tel ,company_fax ,company_business ,company_stocks ,company_establishment_date
		,company_open_date ,company_closed_date ,company_int_user_id ,company_int_date ,company_mod_user_id
		,company_mod_date
		 -->
	</resultMap>

	<select id="CEsearchList" resultMap="s0001Result01" parameterType="java.util.Map"> 
      <![CDATA[
         select pk_company_code, company_name, company_division
         		, TO_CHAR(TO_DATE(company_fiscal_year_o),'YYYY-MM-DD') as company_fiscal_year_o 
         		, TO_CHAR(TO_DATE(company_fiscal_year_t),'YYYY-MM-DD') as company_fiscal_year_t
         		, company_reg_num
				, company_corp_reg_num
				, company_rep_name, company_foreigner_whe
				, company_resi_reg_num
				, company_zip, company_address, company_detail_address, company_tel, company_fax, company_business, company_stocks 
				, TO_CHAR(TO_DATE(company_establishment_date),'YYYY-MM-DD') as company_establishment_date
				, TO_CHAR(TO_DATE(company_open_date),'YYYY-MM-DD') as company_open_date
				, TO_CHAR(TO_DATE(company_closed_date),'YYYY-MM-DD') as company_closed_date
				, company_int_user_id, company_int_date, company_mod_user_id, company_mod_date
         from   company
      ]]>
		<where>
			<if test=" p_id != ''  and  p_id != null">
				pk_company_code = #{p_id}
			</if>
		</where>
		order By pk_company_code asc
	</select>
	
	<update id="CEupdateData" parameterType="java.util.Map">
		update company
		set company_name = #{company_name,jdbcType=VARCHAR}
		   , company_division = #{company_division,jdbcType=VARCHAR}
		   , company_fiscal_year_o = #{company_fiscal_year_o,jdbcType=VARCHAR}
		   , company_fiscal_year_t = #{company_fiscal_year_t,jdbcType=VARCHAR}
		   , company_reg_num = #{company_reg_num,jdbcType=VARCHAR}
		   , company_corp_reg_num = #{company_corp_reg_num,jdbcType=VARCHAR}
		   , company_rep_name = #{company_rep_name,jdbcType=VARCHAR}
		   , company_foreigner_whe = #{company_foreigner_whe,jdbcType=VARCHAR}
		   , company_resi_reg_num = #{company_resi_reg_num,jdbcType=VARCHAR}
		   , company_zip = #{company_zip,jdbcType=VARCHAR}
		   , company_address = #{company_address,jdbcType=VARCHAR}
		   , company_detail_address = #{company_detail_address,jdbcType=VARCHAR}
		   , company_tel = #{company_tel,jdbcType=VARCHAR}
		   , company_fax = #{company_fax,jdbcType=VARCHAR}
		   , company_business = #{company_business,jdbcType=VARCHAR}
		   , company_stocks = #{company_stocks,jdbcType=VARCHAR}
		   , company_establishment_date = #{company_establishment_date,jdbcType=VARCHAR}
		   , company_open_date = #{company_open_date,jdbcType=VARCHAR}
		   , company_closed_date = #{company_closed_date,jdbcType=VARCHAR}
		   , company_int_user_id = #{company_int_user_id,jdbcType=VARCHAR}
		   , company_int_date = #{company_int_date, jdbcType=TIMESTAMP} 
		   , company_mod_user_id = #{company_mod_user_id,jdbcType=VARCHAR}
		   , company_mod_date = #{company_mod_date, jdbcType=TIMESTAMP} 		   
		where pk_company_code = #{pk_company_code, jdbcType=VARCHAR}
	</update>	
	
	<insert id="CEinsertData" parameterType="java.util.Map">
		insert into company(pk_company_code, company_name, company_division ,company_fiscal_year_o ,company_fiscal_year_t ,company_reg_num
							  ,company_corp_reg_num ,company_rep_name ,company_foreigner_whe ,company_resi_reg_num ,company_zip
							  ,company_address ,company_detail_address ,company_tel ,company_fax ,company_business ,company_stocks ,company_establishment_date
							  ,company_open_date ,company_closed_date ,company_int_user_id ,company_int_date ,company_mod_user_id
							  ,company_mod_date) 
			   values(#{pk_company_code, jdbcType=VARCHAR},#{company_name, jdbcType=VARCHAR},#{company_division, jdbcType=VARCHAR},#{company_fiscal_year_o, jdbcType=VARCHAR},
			   		  #{company_fiscal_year_t, jdbcType=VARCHAR},#{company_reg_num, jdbcType=VARCHAR},#{company_corp_reg_num, jdbcType=VARCHAR},#{company_rep_name, jdbcType=VARCHAR},
			   		  #{company_foreigner_whe, jdbcType=VARCHAR},#{company_resi_reg_num, jdbcType=VARCHAR},#{company_zip, jdbcType=VARCHAR},#{company_address, jdbcType=VARCHAR},
			   		  #{company_detail_address, jdbcType=VARCHAR},#{company_tel, jdbcType=VARCHAR},#{company_fax, jdbcType=VARCHAR},#{company_business, jdbcType=VARCHAR},#{company_stocks, jdbcType=VARCHAR},
			   		  #{company_establishment_date, jdbcType=VARCHAR},#{company_open_date, jdbcType=VARCHAR},#{company_closed_date, jdbcType=VARCHAR},#{company_int_user_id, jdbcType=VARCHAR},
			   		  #{company_int_date, jdbcType=TIMESTAMP},#{company_mod_user_id, jdbcType=VARCHAR},#{company_mod_date, jdbcType=TIMESTAMP})
	</insert>	
	
	<delete id="CEdeleteData" parameterType="java.util.Map">
		delete company
		where pk_company_code = #{pk_company_code}
		and company_name = #{company_name}
	</delete>	
	<!-- WorkEnroll -->
	<resultMap id="s0002Result01" type="workEnroll_VO">
		<result property="pk_workplace_code" column="pk_workplace_code" />
		<result property="fk_company_code" column="fk_company_code" />
		<result property="workplace_name" column="workplace_name" />
		<result property="workplace_com_reg_num" column="workplace_com_reg_num" />
		<result property="workplace_corp_reg_num" column="workplace_corp_reg_num" />
		<result property="workplace_rep_name" column="workplace_rep_name" />
		<result property="workplace_zip" column="workplace_zip" />
		<result property="workplace_address" column="workplace_address" />
		<result property="workplace_detail_address" column="workplace_detail_address" />
		<result property="workplace_tel" column="workplace_tel" />
		<result property="workplace_fax" column="workplace_fax" />
		<result property="workplace_business" column="workplace_business" />
		<result property="workplace_stocks" column="workplace_stocks" />
		<result property="workplace_open_date" column="workplace_open_date" />
		<result property="workplace_closed_date" column="workplace_closed_date" />
		<result property="workplace_headoff_whe" column="workplace_headoff_whe" />
		<result property="workplace_inquiry_code" column="workplace_inquiry_code" />
		
		<result property="workplace_int_user_id" column="workplace_int_user_id" />
		<result property="workplace_int_date" column="workplace_int_date" />
		<result property="workplace_mod_user_id" column="workplace_mod_user_id" />
		<result property="workplace_mod_date" column="workplace_mod_date" />
		<!--
		<result property="pk_company_code" column="pk_company_code" />
		 workplace의 모든 칼럼 및 fk_company_code 가져옴
			pk_workplace_code, fk_company_code, workplace_name, workplace_com_reg_num, workplace_corp_reg_num
			, workplace_rep_name, workplace_zip, workplace_address, workplace_detail_address, workplace_tel
			, workplace_fax, workplace_business, workplace_stocks, workplace_open_date, workplace_closed_date
			, workplace_headoff_whe, workplace_inquiry_code, workplace_int_user_id, workplace_int_date, workplace_mod_user_id
			, workplace_mod_date, pk_company_code
		 -->
	</resultMap>

	<select id="WEsearchList" resultMap="s0002Result01" parameterType="java.util.Map"> 
      <![CDATA[
         select pk_workplace_code, fk_company_code, workplace_name, workplace_com_reg_num, workplace_corp_reg_num
				, workplace_rep_name, workplace_zip, workplace_address, workplace_detail_address, workplace_tel
				, workplace_fax, workplace_business, workplace_stocks
				, TO_CHAR(TO_DATE(workplace_open_date),'YYYY-MM-DD') as workplace_open_date 
				, TO_CHAR(TO_DATE(workplace_closed_date),'YYYY-MM-DD') as workplace_closed_date 
				, workplace_headoff_whe, workplace_inquiry_code, workplace_int_user_id, workplace_int_date, workplace_mod_user_id
				, workplace_mod_date
         from   workplace
      ]]>
		<where>
			<if test=" p_id != ''  and  p_id != null">
				pk_workplace_code = #{p_id}
			</if>
		</where>
		order By pk_workplace_code asc
	</select>
	
	<update id="WEupdateData" parameterType="java.util.Map">
		update workplace
		set fk_company_code = #{fk_company_code,jdbcType=VARCHAR}
		   , workplace_name = #{workplace_name,jdbcType=VARCHAR}
		   , workplace_com_reg_num = #{workplace_com_reg_num,jdbcType=VARCHAR}
		   , workplace_corp_reg_num = #{workplace_corp_reg_num,jdbcType=VARCHAR}
		   , workplace_rep_name = #{workplace_rep_name,jdbcType=VARCHAR}
		   , workplace_zip = #{workplace_zip,jdbcType=VARCHAR}
		   , workplace_address = #{workplace_address,jdbcType=VARCHAR}
		   , workplace_detail_address = #{workplace_detail_address,jdbcType=VARCHAR}
		   , workplace_tel = #{workplace_tel,jdbcType=VARCHAR}
		   , workplace_fax = #{workplace_fax,jdbcType=VARCHAR}
		   , workplace_business = #{workplace_business,jdbcType=VARCHAR}
		   , workplace_stocks = #{workplace_stocks,jdbcType=VARCHAR}
		   , workplace_open_date = #{workplace_open_date,jdbcType=VARCHAR}
		   , workplace_closed_date = #{workplace_closed_date,jdbcType=VARCHAR}
		   , workplace_headoff_whe = #{workplace_headoff_whe,jdbcType=VARCHAR}
		   , workplace_inquiry_code = #{workplace_inquiry_code,jdbcType=VARCHAR}
		   , workplace_int_user_id = #{workplace_int_user_id,jdbcType=VARCHAR}
		   , workplace_int_date = #{workplace_int_date,jdbcType=TIMESTAMP}
		   , workplace_mod_user_id = #{workplace_mod_user_id,jdbcType=VARCHAR}
		   , workplace_mod_date = #{workplace_mod_date,jdbcType=TIMESTAMP}
		   
		where pk_workplace_code = #{pk_workplace_code, jdbcType=VARCHAR}
	</update>	
	
	<insert id="WEinsertData" parameterType="java.util.Map">
							
		insert into workplace(pk_workplace_code, fk_company_code, workplace_name, workplace_com_reg_num, workplace_corp_reg_num
							, workplace_rep_name, workplace_zip, workplace_address, workplace_detail_address, workplace_tel
							, workplace_fax, workplace_business, workplace_stocks, workplace_open_date, workplace_closed_date
							, workplace_headoff_whe, workplace_inquiry_code, workplace_int_user_id, workplace_int_date, workplace_mod_user_id
							, workplace_mod_date) 
			   values(#{pk_workplace_code, jdbcType=VARCHAR},#{fk_company_code, jdbcType=VARCHAR},#{workplace_name, jdbcType=VARCHAR},#{workplace_com_reg_num, jdbcType=VARCHAR},
			   		  #{workplace_corp_reg_num, jdbcType=VARCHAR},#{workplace_rep_name, jdbcType=VARCHAR},#{workplace_zip, jdbcType=VARCHAR},#{workplace_address, jdbcType=VARCHAR},
			   		  #{workplace_detail_address, jdbcType=VARCHAR},#{workplace_tel, jdbcType=VARCHAR},#{workplace_fax, jdbcType=VARCHAR},#{workplace_business, jdbcType=VARCHAR},
			   		  #{workplace_stocks, jdbcType=VARCHAR},#{workplace_open_date, jdbcType=VARCHAR},#{workplace_closed_date, jdbcType=VARCHAR},#{workplace_headoff_whe, jdbcType=VARCHAR},
			   		  #{workplace_inquiry_code, jdbcType=VARCHAR},#{workplace_int_user_id, jdbcType=VARCHAR},#{workplace_int_date, jdbcType=TIMESTAMP},#{workplace_mod_user_id, jdbcType=VARCHAR},
			   		  #{workplace_mod_date, jdbcType=TIMESTAMP}
					  )
	</insert>
	
	<delete id="WEdeleteData" parameterType="java.util.Map">
		delete workplace
		where pk_workplace_code = #{pk_workplace_code}
		and workplace_name = #{workplace_name}
	</delete>	
	
	<!-- DeptEnroll -->
	<resultMap id="s0003Result01" type="deptEnroll_VO">
		<result property="pk_dept_code" column="pk_dept_code" /> 
		<result property="dept_name" column="dept_name" />
		<result property="fk_workplace_code" column="fk_workplace_code" />
		<result property="workplace_name" column="workplace_name" />
		<result property="fk_sector_code" column="fk_sector_code" />
		<result property="sector_name" column="sector_name" />
		<result property="dept_priodof" column="dept_priodof" />
		<result property="pk_sector_code" column="pk_sector_code" />
		<result property="sector_priodof" column="sector_priodof" />
		<result property="dept_inquiry_code" column="dept_inquiry_code" />
		
		<result property="dept_int_user_id" column="dept_int_user_id" />
		<result property="dept_int_date" column="dept_int_date" />
		<result property="dept_mod_user_id" column="dept_mod_user_id" />
		<result property="dept_mod_date" column="dept_mod_date" />

		<!--
		<result property="pk_company_code" column="pk_company_code" />
		 dept의 모든 칼럼 및 fk_company_code,fk_company_name, fk_sector_code, sector_name 가져옴
			pk_dept_code, dept_name, fk_workplace_code, workplace_name, fk_sector_code
			, sector_name, dept_priodof, dept_inquiry_code, dept_int_user_id, dept_int_date
			, dept_mod_user_id, dept_mod_date
		 -->
	</resultMap>

	<select id="DEsearchList" resultMap="s0003Result01" parameterType="java.util.Map"> 
      <![CDATA[
         select d.pk_dept_code, d.dept_name, d.fk_workplace_code, w.workplace_name, d.fk_sector_code, 
         	    s.sector_name, TO_CHAR(TO_DATE(d.dept_priodof),'YYYY-MM-DD') as dept_priodof, d.dept_inquiry_code
         from dept d, workplace w, sector s
      ]]>
		 <where>
			d.fk_workplace_code = w.pk_workplace_code
			and d.fk_sector_code = s.pk_sector_code
			
			<if test="code != '' and code != null">
				<!-- and fk_workplace_code = #{code,jdbcType=VARCHAR}  -->
				 and (fk_workplace_code like '%'|| #{code,jdbcType=VARCHAR} ||'%' or w.workplace_name like '%'|| #{code,jdbcType=VARCHAR} ||'%')
				<!-- and w.workplace_name like '%'|| #{code,jdbcType=VARCHAR} ||'%' -->
				<!-- and fk_workplace_code like '%'|| #{code,jdbcType=VARCHAR} ||'%' -->
			</if>
		</where>
			order By d.pk_dept_code asc 
	</select>
	
	<update id="DEupdateData" parameterType="java.util.Map">
		update dept
		set pk_dept_code = #{pk_dept_code,jdbcType=VARCHAR}
		   , dept_name = #{dept_name,jdbcType=VARCHAR}
		   , fk_workplace_code = #{fk_workplace_code,jdbcType=VARCHAR}
		   <!-- , workplace_name = #{workplace_name,jdbcType=VARCHAR} -->
		   , fk_sector_code = #{fk_sector_code,jdbcType=VARCHAR}
		   <!-- , sector_name = #{sector_name,jdbcType=VARCHAR} -->
		   , dept_priodof = #{dept_priodof,jdbcType=VARCHAR}
		   , dept_inquiry_code = #{dept_inquiry_code,jdbcType=VARCHAR}
		   
		   , dept_int_user_id = #{dept_int_user_id,jdbcType=VARCHAR}
		   , dept_int_date = #{dept_int_date,jdbcType=TIMESTAMP}
		   , dept_mod_user_id = #{dept_mod_user_id,jdbcType=VARCHAR}
		   , dept_mod_date = #{dept_mod_date,jdbcType=TIMESTAMP}
		   
		where pk_dept_code = #{pk_dept_code, jdbcType=VARCHAR}
	</update>	
	
	<insert id="DEinsertData" parameterType="java.util.Map">
		insert into dept(pk_dept_code, dept_name, fk_workplace_code, fk_sector_code
							, dept_priodof, dept_inquiry_code, dept_int_user_id, dept_int_date
							, dept_mod_user_id, dept_mod_date) 
			   values(#{pk_dept_code, jdbcType=VARCHAR},#{dept_name, jdbcType=VARCHAR},#{fk_workplace_code, jdbcType=VARCHAR},
			   		  #{fk_sector_code, jdbcType=VARCHAR},#{dept_priodof, jdbcType=VARCHAR},#{dept_inquiry_code, jdbcType=VARCHAR},
			   		  #{dept_int_user_id, jdbcType=VARCHAR},#{dept_int_date, jdbcType=TIMESTAMP},#{dept_mod_user_id, jdbcType=VARCHAR},
			   		  #{dept_mod_date, jdbcType=TIMESTAMP}
					  )
	</insert>	
	
	<delete id="DEdeleteData" parameterType="java.util.Map">
		delete dept
		where pk_dept_code = #{pk_dept_code}
		and dept_name = #{dept_name}
	</delete>	
	
	<!-- 부문등록 -->
	<select id="DEsearchList2" resultMap="s0003Result01" parameterType="java.util.Map"> 
      <![CDATA[
         select pk_sector_code, sector_name, TO_CHAR(TO_DATE(sector_priodof),'YYYY-MM-DD') as sector_priodof
         from sector 
         order By pk_sector_code asc
      ]]>
	</select>
	
	<update id="DEupdateData2" parameterType="java.util.Map">
		update sector
		set pk_sector_code = #{pk_sector_code,jdbcType=VARCHAR}
		   , sector_name = #{sector_name,jdbcType=VARCHAR}
		   , sector_priodof = #{sector_priodof,jdbcType=VARCHAR}
		   		   
		where pk_sector_code = #{pk_sector_code, jdbcType=VARCHAR}
	</update>	
	
	<insert id="DEinsertData2" parameterType="java.util.Map">
		insert into sector(pk_sector_code, sector_name, sector_priodof) 
			   values(#{pk_sector_code, jdbcType=VARCHAR},#{sector_name, jdbcType=VARCHAR},#{sector_priodof, jdbcType=VARCHAR})
	</insert>	
	
	<delete id="DEdeleteData2" parameterType="java.util.Map">
		delete sector
		where pk_sector_code = #{pk_sector_code}
		and sector_name = #{sector_name}
	</delete>	
	
	<!-- 부문코드도움 -->
	<!-- DEsearchList2와 같이 사용 -->
	
	<!-- 사업장코드도움 -->
	
	<select id="DEsearchList3" resultMap="s0003Result01" parameterType="java.util.Map"> 
      <![CDATA[
         select pk_workplace_code, workplace_name
         from workplace 
         order By pk_workplace_code asc
      ]]>
	</select>				
	
	<!-- Sawon Enroll -->
	<select id="SEsearchList" resultMap="p0001Result01" parameterType="java.util.Map"> 
         SELECT PK_SAWON_CODE, SAWON_NAME, SAWON_JOIN_DATE, FK_DEPT_CODE, FK_DEPT_NAME, SAWON_ENG_NAME, SAWON_USER_STATUS, SAWON_EMAIL
		 FROM SAWON
		 WHERE PK_SAWON_CODE IS NOT NULL
			<if test=" SAWON_NAME != ''  and  SAWON_NAME != null">
				and SAWON_NAME LIKE '%'||#{SAWON_NAME}||'%'
			</if>
			<if test=" SelectDeptCode != '' and SelectDeptCode != null">
                and FK_DEPT_CODE = #{SelectDeptCode}
	        </if>
	</select>
	
	<update id="SEupdateData" parameterType="java.util.Map">
		UPDATE SAWON
		SET  PK_SAWON_CODE = #{pk_SAWON_CODE,jdbcType=VARCHAR}
		   , SAWON_NAME = #{sawon_NAME,jdbcType=VARCHAR}
		   , SAWON_ENG_NAME = #{sawon_ENG_NAME,jdbcType=VARCHAR}
		   , SAWON_JOIN_DATE = #{sawon_JOIN_DATE,jdbcType=VARCHAR}
		   , SAWON_USER_STATUS = #{sawon_USER_STATUS,jdbcType=VARCHAR}
		   , SAWON_EMAIL = #{sawon_EMAIL,jdbcType=VARCHAR}
		   , FK_DEPT_CODE = #{fk_DEPT_CODE,jdbcType=VARCHAR}
		   , FK_DEPT_NAME = #{fk_DEPT_NAME,jdbcType=VARCHAR}
		   , SAWON_MOD_USER_ID =  #{PK_SAWON_CODE2, jdbcType=VARCHAR}
		   , SAWON_MOD_DATE = to_char(sysdate,'yyyy.mm.dd hh24:mi')
		WHERE PK_SAWON_CODE = #{pk_SAWON_CODE, jdbcType=VARCHAR}
	</update>	
	
	<insert id="SEinsertData" parameterType="java.util.Map">
		INSERT INTO SAWON(PK_SAWON_CODE, SAWON_NAME, SAWON_ENG_NAME, SAWON_JOIN_DATE, SAWON_USER_STATUS, SAWON_PASSWORD, SAWON_VIEW_PERMISSION, FK_DEPT_NAME, SAWON_EMAIL, FK_DEPT_CODE, SAWON_INT_USER_ID, SAWON_INT_DATE)
		VALUES (#{pk_SAWON_CODE}, #{sawon_NAME}, #{sawon_ENG_NAME, jdbcType=VARCHAR}, #{sawon_JOIN_DATE}, #{sawon_USER_STATUS}, #{pk_SAWON_CODE}, 'C', #{fk_DEPT_NAME, jdbcType=VARCHAR}, #{sawon_EMAIL, jdbcType=VARCHAR}, #{fk_DEPT_CODE, jdbcType=VARCHAR}, #{PK_SAWON_CODE2, jdbcType=VARCHAR}, to_char(sysdate,'yyyy.mm.dd hh24:mi'))
	</insert>	
	
	<delete id="SEdeleteData" parameterType="java.util.Map">
		delete SAWON
		where PK_SAWON_CODE = #{pk_SAWON_CODE}
	</delete>
	
	<!-- Sawon Permissions Update -->
	<update id="SawonPermissionsUpdate" parameterType="hr.system.p0001.vo.SawonVO">
		UPDATE SAWON
		SET SAWON_VIEW_PERMISSION = #{SAWON_VIEW_PERMISSION,jdbcType=VARCHAR}
		WHERE PK_SAWON_CODE = #{PK_SAWON_CODE, jdbcType=VARCHAR}
	</update>
	
	<!-- 인사기록카드 내정보보기 -->
	<select id="myISA" resultType="hr.system.p0001.vo.SawonVO" parameterType="String"> 
    	SELECT FK_DEPT_NAME, RANK_NAME, SAWON_JOIN_DATE, SAWON_PASSWORD
		  FROM SAWON
	  	 WHERE PK_SAWON_CODE = #{PK_SAWON_CODE}
    </select> 
    
    <select id="myISA_fam" resultType="hr.human.p0001.vo.CardFamVO" parameterType="java.util.Map"> 
      	<![CDATA[
         	select PK_FAM_CODE, FK_FAM_SAWON_CODE, FAM_NAME, FAM_RELATIONS, FAM_LIVE,
			 		FAM_RES_NUM, FAM_SUDANG, FAM_DISABLED_CODE, FAM_LOCAL_CODE, FAM_BIRTH_DATE,
			 		FAM_SOLAR_CODE, FAM_HAGLYEOG_CODE, FAM_GRADUATION_CODE, FAM_JOB, FAM_WORK_NAME, FAM_POSITION
         	from   sawon s, fam f
      	]]>
		<where>
			s.pk_sawon_code = f.fk_fam_sawon_code
			and fk_FAM_SAWON_CODE = #{PK_SAWON_CODE}
		</where>
	</select>
	
	<select id="myISA_hl" resultType="hr.human.p0001.vo.HlVO" parameterType="java.util.Map"> 
      	<![CDATA[
         	select HL_SCHOOL_CODE, HL_STA_DATE, HL_END_DATE,
         		   HL_SORT_CODE, HL_LOCATION, HL_MAJOR_CODE,
         		   HL_MINOR_CODE, HL_DEGREE, HL_JUYA_CODE,
         		   HL_MAIN_CODE, FK_HL_SAWON_CODE, PK_HL_CODE
			from sawon s, hl h
      	]]>
		<where>
			s.pk_sawon_code = h.fk_hl_sawon_code
				and h.fk_hl_sawon_code = #{PK_SAWON_CODE}
		</where>
	</select>
	
	<select id="myISA_car" resultType="hr.human.p0001.vo.CarVO" parameterType="java.util.Map"> 
      	<![CDATA[
         	select pk_car_code, fk_car_sawon_code, car_name,
         		   car_sta_date, car_end_date, car_date, 
         		   car_dandang, car_position, car_salary,
         		   car_resign, car_geunsog_code
			from sawon s, car c
      	]]>
		<where>
			s.pk_sawon_code = c.fk_car_sawon_code
				and c.fk_car_sawon_code = #{PK_SAWON_CODE}
		</where>
	</select>
	
	<select id="myISA_cert" resultType="hr.human.p0001.vo.CertVO" parameterType="java.util.Map"> 
      	<![CDATA[
         	select certificate_SORT_CODE, certificate_STA_DATE, certificate_END_DATE,
         		   certificate_NUM, certificate_ISSUER_CODE, certificate_SUDANG_CODE,
         		   fk_CERTIFICATE_SAWON_CODE, pk_CERTIFICATE_CODE
			from sawon s, CERTIFICATE c
      	]]>
		<where>
			s.pk_sawon_code = c.fk_CERTIFICATE_SAWON_CODE
				and c.fk_CERTIFICATE_SAWON_CODE = #{PK_SAWON_CODE}
		</where>
	</select>
	
	<select id="myISA_ass" resultType="hr.human.p0001.vo.AssVO" parameterType="java.util.Map"> 
      	<![CDATA[
         	select ass_NAME, ass_STA_DATE, ass_END_DATE,
         		   ass_DATE, ass_REFLECTANCE, ass_SCORE,
         		   ass_CLASS, ass_NOTE,
         		   fk_ASS_PER_CODE, fk_ASS_SAWON_CODE, pk_ASS_CODE
			from sawon s, ASS a
      	]]>
      	<where>
			s.pk_sawon_code =  a.fk_ass_sawon_code
				and a.fk_ASS_SAWON_CODE = #{PK_SAWON_CODE}
		</where>
	</select>
	
	<select id="myISA_chj" resultType="hr.human.p0001.vo.ChjVO" parameterType="java.util.Map"> 
      	<![CDATA[
         	select chj_COUNTRY_CODE, chj_AREA, chj_STA_YMD,
         		   chj_END_YMD, chj_AIRFARE, chj_OWN,
         		   chj_COMPANY, chj_OTHER, chj_TOTAL,
         		   chj_PURPOSE, fk_CHJ_SAWON_CODE, pk_CHJ_CODE
			from sawon s, CHJ a
      	]]>
      	<where>
			s.pk_sawon_code = a.fk_chj_sawon_code
				and a.fk_CHJ_SAWON_CODE = #{PK_SAWON_CODE}
		</where>
	</select>
	
	<select id="myISA_sb" resultType="hr.human.p0001.vo.SbVO" parameterType="java.util.Map"> 
      	<![CDATA[
         	select sb_DIVISION, sb_NAME, sb_DATE,
         		   sb_DETAILS, sb_SIHAENGCHEO, sb_AMOUNT,
         		   sb_STA_DATE, sb_END_DATE, sb_NOTE,
         		   fk_SB_SAWON_CODE, pk_SB_CODE
			from sawon s, Sb b
      	]]>
      	<where>
			s.pk_sawon_code = b.fk_SB_SAWON_CODE
				and b.fk_SB_SAWON_CODE = #{PK_SAWON_CODE}
		</where>
	</select>
	
	<!-- 인사기록카드 부서원 정보보기 -->
	<select id="deptISA" resultType="hr.human.p0001.vo.CardVO" parameterType="String"> 
       	SELECT i.fk_isa_sawon_code, s.pk_sawon_code, s.sawon_name, photo, s.fk_DEPT_NAME, s.rank_NAME, s.sawon_JOIN_DATE
		  FROM ISA i, sawon s
		 WHERE i.fk_isa_sawon_code(+) = s.pk_sawon_code
           AND s.fk_dept_code IN
           (SELECT fk_dept_code
           from sawon
           where pk_sawon_code = #{PK_SAWON_CODE})
		 ORDER BY s.pk_sawon_code ASC
    </select> 
    
   	<select id="deptISA2" resultType="java.util.Map" parameterType="String"> 
    	SELECT PK_SAWON_CODE, SAWON_NAME, FK_DEPT_NAME, RANK_NAME, SAWON_JOIN_DATE
		  FROM SAWON
	  	 WHERE PK_SAWON_CODE = #{PK_SAWON_CODE}
    </select> 
	
</mapper>